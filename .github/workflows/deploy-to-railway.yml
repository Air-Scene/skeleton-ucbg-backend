name: Deploy to Railway

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: |
          cd backend
          mvn clean package -DskipTests
        env:
          MAVEN_OPTS: "-Xmx2048m"

      - name: Install Railway CLI
        run: |
          curl -fsSL https://railway.app/install.sh | sh

      - name: Deploy to Railway
        run: |
          cd backend
          railway link ${{ secrets.RAILWAY_PROJECT_ID }}
          railway up
        env:
          # Railway Configuration
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          
          # Database Configuration (Provided by Railway)
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          
          # Application Configuration
          SPRING_PROFILES_ACTIVE: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRATION: 900000
          JWT_REFRESH_EXPIRATION: 604800000
          
          # Mail Configuration
          MAIL_HOST: smtp.gmail.com
          MAIL_PORT: 587
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          
          # Server Configuration
          PORT: 8080
          JAVA_OPTS: "-Xms512m -Xmx1g -XX:+ExitOnOutOfMemoryError"
          
          # URLs
          FRONTEND_URL: ${{ github.ref == 'refs/heads/main' && secrets.PROD_FRONTEND_URL || secrets.DEV_FRONTEND_URL }}
          BACKEND_URL: ${{ github.ref == 'refs/heads/main' && secrets.PROD_BACKEND_URL || secrets.DEV_BACKEND_URL }}

      - name: Notify on Success
        if: success()
        run: |
          echo "üöÄ Deployment to Railway successful!"
          echo "Branch: ${{ github.ref }}"
          echo "Environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}"

      - name: Notify on Failure
        if: failure()
        run: |
          echo "‚ùå Deployment to Railway failed!"
          echo "Branch: ${{ github.ref }}"
          echo "Environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}"

permissions:
  contents: read
  deployments: write 